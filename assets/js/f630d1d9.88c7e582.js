(window.webpackJsonp=window.webpackJsonp||[]).push([[71],{143:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return l})),n.d(t,"toc",(function(){return p})),n.d(t,"default",(function(){return b}));var a=n(3),r=n(7),o=(n(0),n(151)),i={id:"types",title:"Types.jl",sidebar_label:"Types.jl"},l={unversionedId:"api/types",id:"api/types",isDocsHomePage:!1,title:"Types.jl",description:"PopObj",source:"@site/docs/api/Types.md",slug:"/api/types",permalink:"/PopGen.jl/docs/api/types",editUrl:"https://github.com/pdimens/popgen.jl/edit/documentation/docs/api/Types.md",version:"current",lastUpdatedAt:1597863030,formattedLastUpdatedAt:"8/19/2020",sidebar_label:"Types.jl",sidebar:"docs",previous:{title:"SummaryInfo.jl",permalink:"/PopGen.jl/docs/api/summaryinfo"},next:{title:"Utils.jl",permalink:"/PopGen.jl/docs/api/utils"}},p=[{value:"<code>PopObj</code>",id:"popobj",children:[]},{value:"<code>PopData</code>",id:"popdata",children:[]},{value:"<code>GenoType</code>",id:"genotype",children:[]},{value:"<code>GenoTypeArray</code>",id:"genotypearray",children:[]},{value:"<code>show</code>",id:"show",children:[]}],c={toc:p};function b(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(a.a)({},c,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h3",{id:"popobj"},Object(o.b)("inlineCode",{parentName:"h3"},"PopObj")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-Julia"},"PopObj\n")),Object(o.b)("p",null,"Generic AbstractType for use in PopGen.jl"),Object(o.b)("hr",null),Object(o.b)("h3",{id:"popdata"},Object(o.b)("inlineCode",{parentName:"h3"},"PopData")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre"},"PopData(meta::IndexedTable, loci::IndexedTable)\n")),Object(o.b)("p",null,"The data struct used for the PopGen population genetics ecosystem. You are\n",Object(o.b)("strong",{parentName:"p"},"strongly")," discouraged from manually creating tables to pass into PopData,\nand instead should use the provided genepop, csv, or vcf file importers."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},Object(o.b)("inlineCode",{parentName:"strong"},"meta")," ::DataFrame")," individual/sample data with the columns:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"name")," ::String the individual/sample names"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"population")," ::String population names"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"ploidy")," ::Int8 ploidy in order of ",Object(o.b)("inlineCode",{parentName:"li"},"ind")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"longitude")," ::Float64 longitude values"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"latitude")," ::Float64 latitude values")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},Object(o.b)("inlineCode",{parentName:"strong"},"loci")," ::DataFrame")," Long-format table of sample genotype records"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"name")," ::String of the individual/sample names"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"population"),"::String population name"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"locus")," ::String of locus name"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"genotype")," Tuple of Int8 or Int16 depending on SNP or microsatellite")),Object(o.b)("hr",null),Object(o.b)("h3",{id:"genotype"},Object(o.b)("inlineCode",{parentName:"h3"},"GenoType")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-julia"},"Genotype::DataType\n")),Object(o.b)("p",null,"For convenience purposes, an alias for ",Object(o.b)("inlineCode",{parentName:"p"},"NTuple{N, <:Signed} where N"),", which is the type describing individual genotypes in PopData."),Object(o.b)("hr",null),Object(o.b)("h3",{id:"genotypearray"},Object(o.b)("inlineCode",{parentName:"h3"},"GenoTypeArray")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-julia"},"GenotypeArray::DataType\n")),Object(o.b)("p",null,"For convenience purposes, an alias for an ",Object(o.b)("inlineCode",{parentName:"p"},"AbstractVector")," of elements ",Object(o.b)("inlineCode",{parentName:"p"},"Missing")," and ",Object(o.b)("inlineCode",{parentName:"p"},"Genotype"),", which itself is of type ",Object(o.b)("inlineCode",{parentName:"p"},"NTuple{N, <:Signed} where N"),". The definition as an ",Object(o.b)("inlineCode",{parentName:"p"},"AbstractVector")," adds flexibility for ",Object(o.b)("inlineCode",{parentName:"p"},"SubArray")," cases."),Object(o.b)("hr",null),Object(o.b)("h3",{id:"show"},Object(o.b)("inlineCode",{parentName:"h3"},"show")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre"},"Base.show(io::IO, data::PopData)\n")),Object(o.b)("p",null,"Overloads ",Object(o.b)("inlineCode",{parentName:"p"},"Base.show")," for concise summary printing of a PopData object."))}b.isMDXComponent=!0},151:function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return m}));var a=n(0),r=n.n(a);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=r.a.createContext({}),b=function(e){var t=r.a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=b(e.components);return r.a.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},s=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),d=b(n),s=a,m=d["".concat(i,".").concat(s)]||d[s]||u[s]||o;return n?r.a.createElement(m,l(l({ref:t},c),{},{components:n})):r.a.createElement(m,l({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=s;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var c=2;c<o;c++)i[c]=n[c];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,n)}s.displayName="MDXCreateElement"}}]);