(window.webpackJsonp=window.webpackJsonp||[]).push([[70],{142:function(e,n,i){"use strict";i.r(n),i.d(n,"frontMatter",(function(){return o})),i.d(n,"metadata",(function(){return r})),i.d(n,"toc",(function(){return l})),i.d(n,"default",(function(){return c}));var t=i(3),a=i(7),s=(i(0),i(152)),o={id:"sibship_simulations",title:"Simulate Sibling Pairs",sidebar_label:"Sibling Pairs"},r={unversionedId:"simulations/sibship_simulations",id:"simulations/sibship_simulations",isDocsHomePage:!1,title:"Simulate Sibling Pairs",description:"To perfom simulations, you will need add and import the package PopGenSims.jl (available here).",source:"@site/docs/simulations/sibship.md",slug:"/simulations/sibship_simulations",permalink:"/PopGen.jl/docs/simulations/sibship_simulations",editUrl:"https://github.com/pdimens/popgen.jl/edit/documentation/docs/simulations/sibship.md",version:"current",lastUpdatedAt:1605726478,formattedLastUpdatedAt:"11/18/2020",sidebar_label:"Sibling Pairs",sidebar:"docs",previous:{title:"Simulate Breeding Crosses",permalink:"/PopGen.jl/docs/simulations/breeding_crosses"},next:{title:"API",permalink:"/PopGen.jl/docs/api/api"}},l=[{value:"Relationship",id:"relationship",children:[]},{value:"Identifying pairs",id:"identifying-pairs",children:[]},{value:"Ploidy",id:"ploidy",children:[]},{value:"Example",id:"example",children:[]}],p={toc:l};function c(e){var n=e.components,i=Object(a.a)(e,["components"]);return Object(s.b)("wrapper",Object(t.a)({},p,i,{components:n,mdxType:"MDXLayout"}),Object(s.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(s.b)("div",{parentName:"div",className:"admonition-heading"},Object(s.b)("h5",{parentName:"div"},Object(s.b)("span",{parentName:"h5",className:"admonition-icon"},Object(s.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(s.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"Requires PopGenSims.jl")),Object(s.b)("div",{parentName:"div",className:"admonition-content"},Object(s.b)("p",{parentName:"div"},"To perfom simulations, you will need add and import the package ",Object(s.b)("inlineCode",{parentName:"p"},"PopGenSims.jl")," (available ",Object(s.b)("a",{parentName:"p",href:"https://github.com/pdimens/PopGenSims.jl"},"here"),")."))),Object(s.b)("p",null,"It's good practice to use your data to simulate sibling pairs and perform\nrelatedness analyses on the simulations to understand the validity/strength\nof relatedness estimators on your data. To do this, you can use ",Object(s.b)("inlineCode",{parentName:"p"},"simulate_sibship"),"\nand specify the relationship you want to simulate and how many pairs to create for\nthat relationship."),Object(s.b)("pre",null,Object(s.b)("code",{parentName:"pre",className:"language-julia"},"simulate_sibship(data::PopData; n::Int, relationship::String, ploidy::Int)\n")),Object(s.b)("p",null,"This function will simulate mating crosses to generate ",Object(s.b)("inlineCode",{parentName:"p"},"n")," sample pairs (default: ",Object(s.b)("inlineCode",{parentName:"p"},"500"),")\nhaving the specified ",Object(s.b)("inlineCode",{parentName:"p"},"relationship"),", returning a ",Object(s.b)("inlineCode",{parentName:"p"},"PopData")," object. The simulations will first\ngenerate parents of the given ",Object(s.b)("inlineCode",{parentName:"p"},"ploidy")," (default: ",Object(s.b)("inlineCode",{parentName:"p"},"2"),") by drawing alleles from a global\nallele pool derived from the given ",Object(s.b)("inlineCode",{parentName:"p"},"data")," (i.e. weighted by their frequencies), then simulate mating between them."),Object(s.b)("h3",{id:"relationship"},"Relationship"),Object(s.b)("p",null,"Simulated parents will be crossed to generate offspring depending on the ",Object(s.b)("inlineCode",{parentName:"p"},"relationship"),":"),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},Object(s.b)("inlineCode",{parentName:"li"},'"fullsib"')," : 2 parents generate 2 full-sibling offspring, returns 2 offspring"),Object(s.b)("li",{parentName:"ul"},Object(s.b)("inlineCode",{parentName:"li"},'"halfsib')," : 3 parents generate 2 half-sibling offspring, returns 2 offspring"),Object(s.b)("li",{parentName:"ul"},Object(s.b)("inlineCode",{parentName:"li"},'"unrelated"')," : returns 2 randomly generated individuals from the global allele pools"),Object(s.b)("li",{parentName:"ul"},Object(s.b)("inlineCode",{parentName:"li"},'"parent-offspring"')," : 2 parents generate 1 offspring, returns 1 offspring and 1 parent")),Object(s.b)("h3",{id:"identifying-pairs"},"Identifying pairs"),Object(s.b)("p",null,"The relationship between the newly generated samples can be identified by:"),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},"Sample ",Object(s.b)("inlineCode",{parentName:"li"},"name")," will specify the simulation number, relationship, and whether parent or offspring"),Object(s.b)("li",{parentName:"ul"},"Their ",Object(s.b)("inlineCode",{parentName:"li"},"population"),' name will be that of their relationship (e.g. "fullsib")')),Object(s.b)("div",{className:"admonition admonition-tip alert alert--success"},Object(s.b)("div",{parentName:"div",className:"admonition-heading"},Object(s.b)("h5",{parentName:"div"},Object(s.b)("span",{parentName:"h5",className:"admonition-icon"},Object(s.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},Object(s.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"plugging into relatedness")),Object(s.b)("div",{parentName:"div",className:"admonition-content"},Object(s.b)("p",{parentName:"div"},"The ",Object(s.b)("inlineCode",{parentName:"p"},"relatedness")," function will recognize the population names output from simulating siblingship\nand only estimate relatedness for the appropriate pairs. If you need this functionality, you are\nstrongly discouraged from manually editing the resulting ",Object(s.b)("inlineCode",{parentName:"p"},"PopData")," from ",Object(s.b)("inlineCode",{parentName:"p"},"simulate_sibship"),"."))),Object(s.b)("h3",{id:"ploidy"},"Ploidy"),Object(s.b)("p",null,"By default, the ploidy of the simulated parents and offspring are inferred from the supplied ",Object(s.b)("inlineCode",{parentName:"p"},"PopData"),"."),Object(s.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(s.b)("div",{parentName:"div",className:"admonition-heading"},Object(s.b)("h5",{parentName:"div"},Object(s.b)("span",{parentName:"h5",className:"admonition-icon"},Object(s.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(s.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"adjusting ploidy")),Object(s.b)("div",{parentName:"div",className:"admonition-content"},Object(s.b)("p",{parentName:"div"},"If you have mixed-ploidy data or wish to generate parents and offspring of a ploidy different than the source\n",Object(s.b)("inlineCode",{parentName:"p"},"PopData")," you can specify the ploidy with which to simulate parents and offspring. For example, if your ",Object(s.b)("inlineCode",{parentName:"p"},"PopData"),"\nis diploid, but you wish to generate triploid or octoploid parents and offspring, you would specify ",Object(s.b)("inlineCode",{parentName:"p"},"ploidy = 3"),"\nor ",Object(s.b)("inlineCode",{parentName:"p"},"ploidy = 8")," repectively."))),Object(s.b)("h4",{id:"odd-ploidy"},"Odd ploidy"),Object(s.b)("p",null,"If trying to create offspring with an odd ploidy (3, 5, etc.), each parent has a 50% chance of\ncontributing (\xbd \xd7 ploidy) + 1 alleles for all loci to the offspring. In other words, if ploidy = 3,\nthere's a 50% chance parent_1 will give 2 alleles for every locus for that simulated cross."),Object(s.b)("h3",{id:"example"},"Example"),Object(s.b)("pre",null,Object(s.b)("code",{parentName:"pre"},'julia> cats = @nancycats ;\n\njulia> fullsib_sims = simulate_sibship(cats, n = 50, relationship= "fullsib")\nPopData Object\n  Markers: Microsatellite\n  Ploidy: 2\n  Samples: 100\n  Loci: 9\n  Populations: 1\n  Longitude: absent\n  Latitude: absent\n\njulia> fullsib_sims.meta_df100\xd75 DataFrame\n\u2502 Row \u2502 name          \u2502 population \u2502 ploidy \u2502 longitude \u2502 latitude \u2502\n\u2502     \u2502 String        \u2502 String     \u2502 Int64  \u2502 Float32?  \u2502 Float32? \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 1   \u2502 sim1_fs_off1  \u2502 fullsib    \u2502 2      \u2502 missing   \u2502 missing  \u2502\n\u2502 2   \u2502 sim1_fs_off2  \u2502 fullsib    \u2502 2      \u2502 missing   \u2502 missing  \u2502\n\u2502 3   \u2502 sim2_fs_off1  \u2502 fullsib    \u2502 2      \u2502 missing   \u2502 missing  \u2502\n\u2502 4   \u2502 sim2_fs_off2  \u2502 fullsib    \u2502 2      \u2502 missing   \u2502 missing  \u2502\n\u2502 5   \u2502 sim3_fs_off1  \u2502 fullsib    \u2502 2      \u2502 missing   \u2502 missing  \u2502\n\u22ee\n\u2502 95  \u2502 sim48_fs_off1 \u2502 fullsib    \u2502 2      \u2502 missing   \u2502 missing  \u2502\n\u2502 96  \u2502 sim48_fs_off2 \u2502 fullsib    \u2502 2      \u2502 missing   \u2502 missing  \u2502\n\u2502 97  \u2502 sim49_fs_off1 \u2502 fullsib    \u2502 2      \u2502 missing   \u2502 missing  \u2502\n\u2502 98  \u2502 sim49_fs_off2 \u2502 fullsib    \u2502 2      \u2502 missing   \u2502 missing  \u2502\n\u2502 99  \u2502 sim50_fs_off1 \u2502 fullsib    \u2502 2      \u2502 missing   \u2502 missing  \u2502\n\u2502 100 \u2502 sim50_fs_off2 \u2502 fullsib    \u2502 2      \u2502 missing   \u2502 missing  \u2502\n')))}c.isMDXComponent=!0},152:function(e,n,i){"use strict";i.d(n,"a",(function(){return d})),i.d(n,"b",(function(){return u}));var t=i(0),a=i.n(t);function s(e,n,i){return n in e?Object.defineProperty(e,n,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[n]=i,e}function o(e,n){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),i.push.apply(i,t)}return i}function r(e){for(var n=1;n<arguments.length;n++){var i=null!=arguments[n]?arguments[n]:{};n%2?o(Object(i),!0).forEach((function(n){s(e,n,i[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):o(Object(i)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(i,n))}))}return e}function l(e,n){if(null==e)return{};var i,t,a=function(e,n){if(null==e)return{};var i,t,a={},s=Object.keys(e);for(t=0;t<s.length;t++)i=s[t],n.indexOf(i)>=0||(a[i]=e[i]);return a}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(t=0;t<s.length;t++)i=s[t],n.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(a[i]=e[i])}return a}var p=a.a.createContext({}),c=function(e){var n=a.a.useContext(p),i=n;return e&&(i="function"==typeof e?e(n):r(r({},n),e)),i},d=function(e){var n=c(e.components);return a.a.createElement(p.Provider,{value:n},e.children)},b={inlineCode:"code",wrapper:function(e){var n=e.children;return a.a.createElement(a.a.Fragment,{},n)}},m=a.a.forwardRef((function(e,n){var i=e.components,t=e.mdxType,s=e.originalType,o=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=c(i),m=t,u=d["".concat(o,".").concat(m)]||d[m]||b[m]||s;return i?a.a.createElement(u,r(r({ref:n},p),{},{components:i})):a.a.createElement(u,r({ref:n},p))}));function u(e,n){var i=arguments,t=n&&n.mdxType;if("string"==typeof e||t){var s=i.length,o=new Array(s);o[0]=m;var r={};for(var l in n)hasOwnProperty.call(n,l)&&(r[l]=n[l]);r.originalType=e,r.mdxType="string"==typeof e?e:t,o[1]=r;for(var p=2;p<s;p++)o[p]=i[p];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,i)}m.displayName="MDXCreateElement"}}]);