(window.webpackJsonp=window.webpackJsonp||[]).push([[52],{124:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return b})),a.d(t,"metadata",(function(){return o})),a.d(t,"toc",(function(){return d})),a.d(t,"default",(function(){return p}));var n=a(3),i=a(7),r=(a(0),a(148)),l=a(152),c=a(153),b={id:"delimited",title:"Delimited format",sidebar_label:"Delimited format"},o={unversionedId:"io/delimited",id:"io/delimited",isDocsHomePage:!1,title:"Delimited format",description:"Import a delimited file as PopData",source:"@site/docs/io/delimited.md",slug:"/io/delimited",permalink:"/PopGen.jl/docs/io/delimited",editUrl:"https://github.com/pdimens/popgen.jl/edit/documentation/docs/io/delimited.md",version:"current",lastUpdatedAt:1615218833,sidebar_label:"Delimited format",sidebar:"docs",previous:{title:"Writing data to file",permalink:"/PopGen.jl/docs/io/file_write"},next:{title:"Genepop format",permalink:"/PopGen.jl/docs/io/genepop"}},d=[{value:"Import a delimited file as <code>PopData</code>",id:"import-a-delimited-file-as-popdata",children:[{value:"Arguments",id:"arguments",children:[]},{value:"Keyword Arguments",id:"keyword-arguments",children:[]},{value:"Example",id:"example",children:[]},{value:"Format",id:"format",children:[]},{value:"Missing data",id:"missing-data",children:[]}]},{value:"Writing to a delimited file",id:"writing-to-a-delimited-file",children:[{value:"Keyword Arguments",id:"keyword-arguments-1",children:[]},{value:"Example",id:"example-1",children:[]}]},{value:"Acknowledgements",id:"acknowledgements",children:[]}],m={toc:d};function p(e){var t=e.components,a=Object(i.a)(e,["components"]);return Object(r.b)("wrapper",Object(n.a)({},m,a,{components:t,mdxType:"MDXLayout"}),Object(r.b)("h2",{id:"import-a-delimited-file-as-popdata"},"Import a delimited file as ",Object(r.b)("inlineCode",{parentName:"h2"},"PopData")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-julia"}),"delimited(infile::String; kwargs...)\n")),Object(r.b)("h3",{id:"arguments"},"Arguments"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"infile::String")," : path to the input file, in quotes")),Object(r.b)("h3",{id:"keyword-arguments"},"Keyword Arguments"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("inlineCode",{parentName:"p"},"delim::String")," : delimiter characters. The default (",Object(r.b)("inlineCode",{parentName:"p"},'"auto"'),") uses auto-parsing of ",Object(r.b)("inlineCode",{parentName:"p"},"CSV.File"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("inlineCode",{parentName:"p"},"digits::Integer")," : the number of digits used to denote an allele (default: ",Object(r.b)("inlineCode",{parentName:"p"},"3"),")")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("inlineCode",{parentName:"p"},"diploid::Bool"),"  : whether samples are diploid for parsing optimizations (default: ",Object(r.b)("inlineCode",{parentName:"p"},"true"),")")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("inlineCode",{parentName:"p"},"silent::Bool")," : whether to print file information during import (default: ",Object(r.b)("inlineCode",{parentName:"p"},"false"),")"))),Object(r.b)("h3",{id:"example"},"Example"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{}),'lizardsCA = delimited("CA_lizards.csv", digits = 3);\n')),Object(r.b)("h3",{id:"format"},"Format"),Object(r.b)("p",null,"First row is column names, and they occur in this order:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"name"),Object(r.b)("li",{parentName:"ol"},"population"),Object(r.b)("li",{parentName:"ol"},"longitude"),Object(r.b)("li",{parentName:"ol"},"latitude"),Object(r.b)("li",{parentName:"ol"},"locus_1_name"),Object(r.b)("li",{parentName:"ol"},"locus_2_name"),Object(r.b)("li",{parentName:"ol"},"etc...")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Formatting example:")),Object(r.b)(l.a,{block:!0,defaultValue:"csv",values:[{label:"raw csv",value:"csv"},{label:"table view",value:"table"}],mdxType:"Tabs"},Object(r.b)(c.a,{value:"csv",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{}),"name,population,longitude,latitude,Locus1,Locus2,Locus3\nsierra_01,mountain,11.11,-22.22,001001,-9,001001\nsierra_02,mountain,11.12,-22.21,001001,001001,001002\nsnbarb_01,coast,,,001001,001001,001002\nsnbarb_02,coast,11.14,-22.24,001001,001001,001001\nsnbarb_03,coast,11.15,,001002,001001,001001\n"))),Object(r.b)(c.a,{value:"table",mdxType:"TabItem"},Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"name"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"population"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"longitude"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"latitude"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"Locus1"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"Locus2"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"Locus3"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"sierra_01"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"mountain"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"11.11"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"-22.22"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"001001"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"-9"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"001001")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"sierra_02"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"mountain"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"11.12"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"-22.21"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"001001"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"001001"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"001002")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"snbarb_01"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"coast"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"center"})),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"center"})),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"001001"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"001001"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"001002")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"snbarb_02"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"coast"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"11.14"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"-22.24"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"001001"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"001001"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"001001")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"snbarb_03"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"coast"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"11.15"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"center"})),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"001002"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"001001"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"001001")))))),Object(r.b)("h3",{id:"missing-data"},"Missing data"),Object(r.b)("h4",{id:"genotypes"},"Genotypes"),Object(r.b)("p",null,"Missing genotypes can be formatted as all-zeros (ex.",Object(r.b)("inlineCode",{parentName:"p"},"000000"),") or negative-nine ",Object(r.b)("inlineCode",{parentName:"p"},"-9")),Object(r.b)("h4",{id:"location-data"},"Location data"),Object(r.b)("p",null,"If location data is missing for a sample (which is ok!), make sure the value is blank, otherwise there will be transcription errors! (example at line 3 in the example above)"),Object(r.b)("div",{className:"admonition admonition-info alert alert--info"},Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(r.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"alias")),Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("p",{parentName:"div"},"You can also use the command ",Object(r.b)("inlineCode",{parentName:"p"},"csv()")," synonymously with ",Object(r.b)("inlineCode",{parentName:"p"},"delimited()"),". "))),Object(r.b)("h2",{id:"writing-to-a-delimited-file"},"Writing to a delimited file"),Object(r.b)("p",null,"All file writing options can be performed using ",Object(r.b)("inlineCode",{parentName:"p"},"write_to()"),", which calls ",Object(r.b)("inlineCode",{parentName:"p"},"delimited")," when writing to a delimited file."),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-julia"}),'delimited(data::PopData; filename::String, delim::String = ",", digits::Integer = 3, format::String = "wide", miss::Int = 0)\n')),Object(r.b)("p",null,"Write PopData to a text-delimited file. "),Object(r.b)("h3",{id:"keyword-arguments-1"},"Keyword Arguments"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"filename::String"),": the output filename"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"digits::Integer")," : how many digits to format each allele (default: ",Object(r.b)("inlineCode",{parentName:"li"},"3"),")",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"e.g. ",Object(r.b)("inlineCode",{parentName:"li"},"digits = 3")," will turn ",Object(r.b)("inlineCode",{parentName:"li"},"(1, 2)")," into ",Object(r.b)("inlineCode",{parentName:"li"},"001002")))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"format::String"),": whether to output in",Object(r.b)("inlineCode",{parentName:"li"},'"wide"')," or ",Object(r.b)("inlineCode",{parentName:"li"},'"long"')," (aka ",Object(r.b)("inlineCode",{parentName:"li"},'"tidy"'),") format ",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"wide")," : the standard-format CSV for importing into PopGen.jl (default)"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"long")," : the ",Object(r.b)("inlineCode",{parentName:"li"},"loci")," table with ",Object(r.b)("inlineCode",{parentName:"li"},"longitude")," and ",Object(r.b)("inlineCode",{parentName:"li"},"latitude")," columns added"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"delim::String"),": delimiter to use for writing the file (default: ",Object(r.b)("inlineCode",{parentName:"li"},'","'),")"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"miss::Integer"),": how you would like missing values written ",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"0")," : As a genotype represented as a number of zeroes equal to ",Object(r.b)("inlineCode",{parentName:"li"},"digits \xd7 ploidy")," like ",Object(r.b)("inlineCode",{parentName:"li"},"000000")," (default) "),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"-9")," : As a single value ",Object(r.b)("inlineCode",{parentName:"li"},"-9"))))),Object(r.b)("h3",{id:"example-1"},"Example"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-julia"}),'cats = @nancycats;\nfewer_cats = omit(cats, names = samples(cats)[1:10]);\ndelimited(fewer_cats, filename = "filtered_nancycats.gen", digits = 3, format = "wide", delim = " ")\n')),Object(r.b)("h2",{id:"acknowledgements"},"Acknowledgements"),Object(r.b)("p",null,"Thanks to the efforts of the ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/JuliaData/CSV.jl"}),"CSV.jl")," team, we are able leverage that package to do much of the heavy lifting within this parser. "))}p.isMDXComponent=!0},148:function(e,t,a){"use strict";a.d(t,"a",(function(){return m})),a.d(t,"b",(function(){return u}));var n=a(0),i=a.n(n);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function c(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function b(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var o=i.a.createContext({}),d=function(e){var t=i.a.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):c(c({},t),e)),a},m=function(e){var t=d(e.components);return i.a.createElement(o.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},s=i.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,r=e.originalType,l=e.parentName,o=b(e,["components","mdxType","originalType","parentName"]),m=d(a),s=n,u=m["".concat(l,".").concat(s)]||m[s]||p[s]||r;return a?i.a.createElement(u,c(c({ref:t},o),{},{components:a})):i.a.createElement(u,c({ref:t},o))}));function u(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var r=a.length,l=new Array(r);l[0]=s;var c={};for(var b in t)hasOwnProperty.call(t,b)&&(c[b]=t[b]);c.originalType=e,c.mdxType="string"==typeof e?e:n,l[1]=c;for(var o=2;o<r;o++)l[o]=a[o];return i.a.createElement.apply(null,l)}return i.a.createElement.apply(null,a)}s.displayName="MDXCreateElement"},149:function(e,t,a){"use strict";function n(e){var t,a,i="";if("string"==typeof e||"number"==typeof e)i+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(a=n(e[t]))&&(i&&(i+=" "),i+=a);else for(t in e)e[t]&&(i&&(i+=" "),i+=t);return i}t.a=function(){for(var e,t,a=0,i="";a<arguments.length;)(e=arguments[a++])&&(t=n(e))&&(i&&(i+=" "),i+=t);return i}},150:function(e,t,a){"use strict";var n=a(0),i=a(151);t.a=function(){var e=Object(n.useContext)(i.a);if(null==e)throw new Error("`useUserPreferencesContext` is used outside of `Layout` Component.");return e}},151:function(e,t,a){"use strict";var n=a(0),i=Object(n.createContext)(void 0);t.a=i},152:function(e,t,a){"use strict";var n=a(0),i=a.n(n),r=a(150),l=a(149),c=a(54),b=a.n(c),o=37,d=39;t.a=function(e){var t=e.lazy,a=e.block,c=e.defaultValue,m=e.values,p=e.groupId,s=e.className,u=Object(r.a)(),O=u.tabGroupChoices,j=u.setTabGroupChoices,f=Object(n.useState)(c),g=f[0],N=f[1],h=n.Children.toArray(e.children);if(null!=p){var v=O[p];null!=v&&v!==g&&m.some((function(e){return e.value===v}))&&N(v)}var y=function(e){N(e),null!=p&&j(p,e)},w=[];return i.a.createElement("div",null,i.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:Object(l.a)("tabs",{"tabs--block":a},s)},m.map((function(e){var t=e.value,a=e.label;return i.a.createElement("li",{role:"tab",tabIndex:0,"aria-selected":g===t,className:Object(l.a)("tabs__item",b.a.tabItem,{"tabs__item--active":g===t}),key:t,ref:function(e){return w.push(e)},onKeyDown:function(e){!function(e,t,a){switch(a.keyCode){case d:!function(e,t){var a=e.indexOf(t)+1;e[a]?e[a].focus():e[0].focus()}(e,t);break;case o:!function(e,t){var a=e.indexOf(t)-1;e[a]?e[a].focus():e[e.length-1].focus()}(e,t)}}(w,e.target,e)},onFocus:function(){return y(t)},onClick:function(){y(t)}},a)}))),t?Object(n.cloneElement)(h.filter((function(e){return e.props.value===g}))[0],{className:"margin-vert--md"}):i.a.createElement("div",{className:"margin-vert--md"},h.map((function(e,t){return Object(n.cloneElement)(e,{key:t,hidden:e.props.value!==g})}))))}},153:function(e,t,a){"use strict";var n=a(3),i=a(0),r=a.n(i);t.a=function(e){var t=e.children,a=e.hidden,i=e.className;return r.a.createElement("div",Object(n.a)({role:"tabpanel"},{hidden:a,className:i}),t)}}}]);